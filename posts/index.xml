<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ForFurture</title>
    <link>https://destinyu.github.io/posts/</link>
    <description>Recent content in Posts on ForFurture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 04 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://destinyu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python基础知识总结(一)</title>
      <link>https://destinyu.github.io/2020/python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E4%B8%80/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://destinyu.github.io/2020/python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E4%B8%80/</guid>
      <description>变量与简单数据类型 变量名规范  应使用小写字母 字母之间可以用下划线连接 便于阅读但不能过于省略  字符串操作  单引号和双引号均可，根据实际包含情况来决定
 转换大小写的用法
  string.title()#首字母大写 string.upper()#全部大写 string.lower()#全部小写   合并字符串：+
 添加空白与换行：\t+\n
 删除多余空白
  string.rstrip()#删除末尾空白 string.lstrip()#删除开头空白 string.strip()#删除字符串两端空白  数字  乘方：a**b
 类型转换：
  str(number)   特别注意：  python2：
3&amp;frasl;2=1
3.0/2=1.5
3&amp;frasl;2.0=1.5
3.0/2.0=1.5
python3：
3&amp;frasl;2=1.5
python之禅  Complex is better than complicated Simple is better than complex Now is better than never</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://destinyu.github.io/2020/creating-a-new-theme/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://destinyu.github.io/2020/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>git diff 的用法浅析</title>
      <link>https://destinyu.github.io/2020/git-diff%E7%9A%84%E5%85%B7%E4%BD%93%E7%94%A8%E6%B3%95%E6%B5%85%E6%9E%90/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://destinyu.github.io/2020/git-diff%E7%9A%84%E5%85%B7%E4%BD%93%E7%94%A8%E6%B3%95%E6%B5%85%E6%9E%90/</guid>
      <description>所有用法 Git分为 工作区，暂存区，仓库
git add#把工作区内容放入暂存区  git commit#把暂存区内容提交到仓库  git diff#查看工作区与暂存区差异  git diff --cashed#查看暂存区与仓库差异  git diff HEAD#查看工作区与仓库差异  以新建文件流程从头开始  在工作区新建一个文件（内容为一行文字）  vim new.txt   查看工作区与暂存区区别==（此时暂存区没有东西）==  git diff new.txt  结果为空（没有区别）
 将文件提交到暂存区  git add new.txt  此时暂存区内容与工作区一致，还是没有区别
 修改工作区文件内容（添加一行）  vim new.txt   可以查看一下目前的所有区状态  git status  显示为：
​ 第一个版本的new未commit
​ 第二个修改版本的new未add+commit
（==注意此时若commit则提交的是未修改的第一版==）
各区情况：
 工作区为修改后的两行内容 暂存区为第一次存入的一行内容 仓库为空   查看工作区与暂存区的区别  git diff new.</description>
    </item>
    
  </channel>
</rss>