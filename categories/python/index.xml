<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on ForFurture</title>
    <link>https://destinyu.github.io/categories/python/</link>
    <description>Recent content in python on ForFurture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 06 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://destinyu.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python基础知识总结（二）</title>
      <link>https://destinyu.github.io/2020/python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E4%BA%8C/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://destinyu.github.io/2020/python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E4%BA%8C/</guid>
      <description>函数 定义函数  无参数  def function(): print(&amp;quot;this is a function&amp;quot;)   传一个参数  def function(name): print(&amp;quot;hello,&amp;quot;+name)  传递多参数  位置参数（由位置关系关联）  def position_function(a,b): print(a+&amp;quot; need &amp;quot;+b) position_function(&#39;Tom&#39;,&#39;Jerry&#39;)#根据参数的位置决定输出   关键字实参  def key_function(a,b): print(a+&amp;quot; need &amp;quot;+b) key_function(a=&#39;Tom&#39;,b=&#39;Jerry&#39;)#直接由等式决定，可不管顺序   默认值（使用默认值时必须先列出没有默认值的形参）  def default_function(a,b=&#39;Jerry&#39;): print(a+&amp;quot; need &amp;quot;+b) default_function(&#39;Tom&#39;) default_function(a=&#39;Tom&#39;)  返回值  返回简单值  def function(a,b): meaasge=a+&#39; &#39;+b) return message function_back=function(&#39;Tom&#39;,&#39;Jerry&#39;) print(function)   实参可选  def function(a,b,c=&#39;&#39;): if c: print(a+&amp;quot; need &amp;quot;+b+&amp;quot; and &amp;quot;+c) else: print(a+&amp;quot; need &amp;quot;+b) function_back=function(&#39;Tom&#39;,&#39;Jerry&#39;) function_back=function(&#39;Tom&#39;,&#39;Jerry&#39;,&#39;Mike&#39;)   返回字典  def function(a,b): name={&#39;first&#39;:a,&#39;last&#39;:b} return name function_back=function(&#39;Tom&#39;,&#39;Jerry&#39;)  传递列表  把参数看做列表  def function(values): for value in values: print(value) names=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] function(names)   不修改原列表，创建副本  def function(values[:])  传递任意数量的参数  任意数量实参  def function(*names): print(names) function(&#39;a&#39;) function(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;)   结合位置实参和任意数量参数  def function(age,*names): print(str(age)+&amp;quot; years old:&amp;quot;) for name in names: print(name) function(12,&#39;a&#39;) function(13,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;)   使用任意数量的关键字实参  def function(first,last,**info): dictionary={} dictionary[&#39;first_name&#39;]=first dictionary[&#39;last_name&#39;]=last for key,value in info.</description>
    </item>
    
    <item>
      <title>python基础知识总结(一)</title>
      <link>https://destinyu.github.io/2020/python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E4%B8%80/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://destinyu.github.io/2020/python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E4%B8%80/</guid>
      <description>变量与简单数据类型 变量名规范  应使用小写字母 字母之间可以用下划线连接 便于阅读但不能过于省略  字符串操作  单引号和双引号均可，根据实际包含情况来决定
 转换大小写的用法
  string.title()#首字母大写 string.upper()#全部大写 string.lower()#全部小写   合并字符串：+
 添加空白与换行：\t+\n
 删除多余空白
  string.rstrip()#删除末尾空白 string.lstrip()#删除开头空白 string.strip()#删除字符串两端空白  数字  乘方：a**b
 类型转换：
  str(number)   特别注意：  python2：
3&amp;frasl;2=1
3.0/2=1.5
3&amp;frasl;2.0=1.5
3.0/2.0=1.5
python3：
3&amp;frasl;2=1.5
python之禅  Complex is better than complicated Simple is better than complex Now is better than never</description>
    </item>
    
  </channel>
</rss>